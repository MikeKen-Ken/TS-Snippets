{"D:\\workspace\\ts-snippets\\src\\binarySearch.ts":{"path":"D:\\workspace\\ts-snippets\\src\\binarySearch.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":15}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":4},"end":{"line":19,"column":5}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":29}},"7":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":23}},"9":{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":27}},"11":{"start":{"line":17,"column":12},"end":{"line":17,"column":26}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}}},"fnMap":{"0":{"name":"binarySearch","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":34},"end":{"line":21,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},{"start":{"line":10,"column":8},"end":{"line":12,"column":9}}],"line":10},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":18,"column":9}},{"start":{"line":13,"column":8},"end":{"line":18,"column":9}}],"line":13}},"s":{"0":1,"1":1,"2":5,"3":5,"4":5,"5":16,"6":16,"7":16,"8":4,"9":12,"10":5,"11":7,"12":1,"13":1},"f":{"0":5},"b":{"0":[4,12],"1":[5,7]},"inputSourceMap":{"version":3,"file":"D:/workspace/ts-snippets/src/binarySearch.ts","sources":["D:/workspace/ts-snippets/src/binarySearch.ts"],"names":[],"mappings":";;;AAAA,SAAgB,YAAY,CAAC,IAAI,EAAE,IAAI;IACnC,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAE3B,OAAO,GAAG,IAAI,IAAI,EAAE;QAChB,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAExB,IAAI,KAAK,KAAK,IAAI,EAAE;YAChB,OAAO,GAAG,CAAC;SACd;QAED,IAAI,KAAK,GAAG,IAAI,EAAE;YACd,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;SAClB;aAAM;YACH,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;SACjB;KACJ;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AApBD,oCAoBC","sourcesContent":["export function binarySearch(list, item): number {\n    let low = 0;\n    let high = list.length - 1;\n\n    while (low <= high) {\n        const mid = Math.floor((low + high) / 2);\n        const guess = list[mid];\n\n        if (guess === item) {\n            return mid;\n        }\n\n        if (guess > item) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n\n    return null; //if not found\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"05c456176745179fcd390a32040919569ff20140","contentHash":"27dc776b24da148ba78e54faf315026b199d76d6c99ea725312dc51b491930ab"}}